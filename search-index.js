var searchIndex = {};
searchIndex["linear_map"] = {"doc":"A module providing a map implementation `LinearMap` backed by a vector.","items":[[3,"LinearMap","linear_map","A very simple map implementation backed by a vector.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a LinearMap.",null,null],[3,"VacantEntry","","A view into a single empty location in a LinearMap.",null,null],[3,"IntoIter","","A consuming iterator over a map.",null,null],[3,"Drain","","A draining iterator over a `LinearMap`.",null,null],[3,"Iter","","The iterator returned by `LinearMap::iter`.",null,null],[3,"IterMut","","The iterator returned by `LinearMap::iter_mut`.",null,null],[3,"Keys","","The iterator returned by `LinearMap::keys`.",null,null],[3,"Values","","The iterator returned by `LinearMap::values`.",null,null],[4,"Entry","","A view into a single location in a map, which may be vacant or occupied.",null,null],[13,"Occupied","","An occupied Entry.",0,null],[13,"Vacant","","A vacant Entry.",0,null],[11,"new","","Creates an empty map. This method does not allocate.",1,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Creates an empty map with the given initial capacity.",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more to be inserted in the\nmap. The collection may reserve more space to avoid frequent\nreallocations.",1,{"inputs":[{"name":"linearmap"},{"name":"usize"}],"output":null}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elemnnts to\nbe inserted in the map.",1,{"inputs":[{"name":"linearmap"},{"name":"usize"}],"output":null}],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible.",1,{"inputs":[{"name":"linearmap"}],"output":null}],[11,"len","","Returns the number of elements in the map.",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"bool"}}],[11,"clear","","Clears the map, removing all elements. Keeps the allocated memory for\nreuse.",1,{"inputs":[{"name":"linearmap"}],"output":null}],[11,"drain","","Removes all key-value pairs from the map and returns an iterator that yields them in\narbitrary order.",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"drain"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order. Iterator\nelement type is `(&amp;&#39;a K, &amp;&#39;a V)`.",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order with\nmutable references to the values. Iterator element type is `(&amp;&#39;a K, &amp;&#39;a\nmut V)`.",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"itermut"}}],[11,"keys","","An iterator visiting all keys in arbitrary order. Iterator element type\nis `&amp;&#39;a K`.",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order. Iterator element\ntype is `&amp;&#39;a V`.",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"values"}}],[11,"get","","Returns a reference to the value corresponding to the key.",1,{"inputs":[{"name":"linearmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",1,{"inputs":[{"name":"linearmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value to the specified key.",1,{"inputs":[{"name":"linearmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"insert","","Inserts a key-value pair into the map. If the key already had a value\npresent in the map, it is returned. Otherwise, `None` is returned.",1,{"inputs":[{"name":"linearmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key-value pair from the map. If the key had a value present\nin the map, it is returned. Otherwise, `None` is returned.",1,{"inputs":[{"name":"linearmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",1,{"inputs":[{"name":"linearmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"clone","","",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"self"}}],[11,"clone_from","","",1,{"inputs":[{"name":"linearmap"},{"name":"self"}],"output":null}],[11,"fmt","","",1,{"inputs":[{"name":"linearmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"extend","","",1,{"inputs":[{"name":"linearmap"},{"name":"i"}],"output":null}],[11,"from_iter","","",1,{"inputs":[{"name":"i"}],"output":{"name":"self"}}],[11,"index","","",1,{"inputs":[{"name":"linearmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"eq","","",1,{"inputs":[{"name":"linearmap"},{"name":"self"}],"output":{"name":"bool"}}],[11,"into","","",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"vec"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",0,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",0,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",2,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",2,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",2,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",2,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",2,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",3,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"next","","",4,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"len","","",4,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",5,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"len","","",5,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"next","","",6,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"next","","",7,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",7,null],[11,"next","","",8,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",8,null],[11,"next","","",9,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",9,null],[11,"clone","","",6,{"inputs":[{"name":"iter"}],"output":{"name":"self"}}],[11,"clone","","",8,{"inputs":[{"name":"keys"}],"output":{"name":"self"}}],[11,"clone","","",9,{"inputs":[{"name":"values"}],"output":{"name":"self"}}],[11,"next_back","","",6,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",7,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",8,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"next_back","","",9,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"len","","",6,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"len","","",7,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"len","","",8,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"len","","",9,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"into_iter","","",1,{"inputs":[{"name":"linearmap"}],"output":{"name":"intoiter"}}],[14,"linear_map!","","Creates a `LinearMap` from a list of key-value pairs. The created\n`LinearMap` has a capacity set to the number of entries provided.",null,null]],"paths":[[4,"Entry"],[3,"LinearMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"Values"]]};
initSearch(searchIndex);
